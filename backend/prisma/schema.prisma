// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model User {
  id              Int            @id @default(autoincrement())
  firstName       String
  lastName        String
  email           String         @unique
  city            String
  password        String
  topics          Topic[]
  newsItems       News[]
  partnerships    Partnership[]
  photos          Photo[]
  videos          Video[]
  createdAt       DateTime       @default(now())
}

model Topic {
  id           Int      @id @default(autoincrement())
  title        Json     // Structure: { en: String, ar: String, fr: String }
  paragraph    Json     // Structure: { en: String, ar: String, fr: String }
  image        String?
  youtubeLink  String?
  user         User     @relation(fields: [userEmail], references: [email])
  userEmail    String
  createdAt    DateTime @default(now())
}

model News {
  id           Int      @id @default(autoincrement())
  title        Json
  paragraph    Json
  image        String?
  youtubeLink  String?
  isFeatured   Boolean  @default(false)
  user         User     @relation(fields: [userEmail], references: [email])
  userEmail    String
  createdAt    DateTime @default(now())
}

model Partnership {
  id           Int      @id @default(autoincrement())
  websiteUrl   String
  image        String
  user         User     @relation(fields: [userEmail], references: [email])
  userEmail    String
  createdAt    DateTime @default(now())
}

model Photo {
  id           Int      @id @default(autoincrement())
  image        String
  user         User     @relation(fields: [userEmail], references: [email])
  userEmail    String
  createdAt    DateTime @default(now())
}

model Video {
  id           Int      @id @default(autoincrement())
  title        Json     // Structure: { en: String, ar: String, fr: String }
  youtubeLink  String
  user         User     @relation(fields: [userEmail], references: [email])
  userEmail    String
  createdAt    DateTime @default(now())
}
